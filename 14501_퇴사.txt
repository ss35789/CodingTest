import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] T = new int[N + 1];
        int[] P = new int[N + 1];
        int[] dp = new int[N + 2]; // 각 날짜별 최대 이익을 저장하는 배열

        for (int i = 1; i <= N; i++) {
            T[i] = scanner.nextInt();
            P[i] = scanner.nextInt();
        }

        // 동적 계획법을 이용하여 최대 이익 계산
        for (int i = N; i > 0; i--) {
            int nextDay = i + T[i]; // 상담을 끝내는 날짜
            if (nextDay <= N + 1) {
                // 현재 상담을 선택했을 때의 최대 이익과 다음 상담을 선택하지 않았을 때의 최대 이익을 비교하여 더 큰 값을 선택
                dp[i] = Math.max(P[i] + dp[nextDay], dp[i + 1]);
            } else {
                // 현재 날짜에 상담을 할 수 없을 때
                dp[i] = dp[i + 1];
            }
        }

        System.out.println(dp[1]); // 최대 이익 출력
    }
}
