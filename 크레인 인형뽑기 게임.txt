import java.util.*;

class Solution {
    
//     public int catch(int move) {
//         for(int i=0;i<board[].length;i++){
//             if(board[i][move]!=0){
//                 int answer=board[i][move];
//                 board[i][move]=0;
//                return answer;
//             }
            
//         }
//     }
    public int solution(int[][] board, int[] moves) {
        
        int answer = 0,move;
        Stack basket = new Stack();
        basket.push(-1);
        
       L1: for(int i=0;i<moves.length;i++){
            move=moves[i]-1;
           L2: for(int j=0;j<board.length;j++){
            if(board[j][move]!=0){
                if((Integer)basket.peek()==board[j][move]){
                    basket.pop();
                    answer+=2;
                    board[j][move]=0;
                    continue L1;
                }
                 else if((Integer)basket.peek()!=board[j][move]){
                     basket.push(board[j][move]);
                     board[j][move]=0;
                     continue L1;
                 }
               
            }
           
        }
            
            
            
                
            
        }
        
        return answer;
    }
}