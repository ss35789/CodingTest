import java.util.*;
import java.lang.*;
import java.io.*;

// The main method must be in a class named "Main".
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int l = sc.nextInt();

        int[][] route = new int[N+1][N+1];
          boolean[] check = new boolean[N+1];
        for(int i=0;i<l;i++){
            int x = sc.nextInt();
            int y = sc.nextInt();

            route[x][y] = 1;
            route[y][x] = 1;
        }
        check[1] = true;
        bfs(route, check, 1);
        //checkPath(route, check, 1);
        int answer=0;
        for(int i=1;i<N+1;i++){
            if(check[i])answer++;
        }
           System.out.print(answer-1);
    }

    public static void checkPath(int[][] route, boolean[] check, int start){

         for(int i=1;i<route.length;i++){
            if(start == i || route[start][i] == 0 || check[i]) continue;
            
            if(route[start][i] == 1){
                check[i] = true;
                checkPath(route,check,i);

            }

            
        }






            
    }


         public static void bfs(int[][] route, boolean[] check, int start) {
        Queue<Integer> queue = new LinkedList<>();
        queue.offer(start);
        check[start] = true;

        while (!queue.isEmpty()) {
            int node = queue.poll();
            for (int i = 1; i < route.length; i++) {
                if (route[node][i] == 1 && !check[i]) {
                    queue.offer(i);
                    check[i] = true;
                }
            }
        }
    }
    
}
