import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());

        int[][] classes = new int[N][2];
        for (int i = 0; i < N; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int S = Integer.parseInt(st.nextToken());
            int T = Integer.parseInt(st.nextToken());
            classes[i][0] = S;
            classes[i][1] = T;
        }

        // 수업 시작 시간을 기준으로 정렬
        Arrays.sort(classes, Comparator.comparingInt(a -> a[0]));

        // 우선순위 큐를 이용하여 현재 사용 중인 강의실의 종료 시간을 관리
        PriorityQueue<Integer> pq = new PriorityQueue<>();

        for (int i = 0; i < N; i++) {
            // 현재 수업의 시작 시간보다 이전에 끝나는 수업들을 큐에서 제거
            if (!pq.isEmpty() && pq.peek() <= classes[i][0]) {
                pq.poll();
            }
            // 현재 수업의 종료 시간을 큐에 추가
            pq.offer(classes[i][1]);
        }

        // 큐에 남아있는 종료 시간의 개수가 필요한 강의실의 최소 개수
        System.out.println(pq.size());
    }
}
